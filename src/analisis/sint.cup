package analisis;
import java_cup.runtime.*;
import java.util.ArrayList;

parser code
{://codigo visible

    ArrayList <Conjunto> CONJUNTOS = new ArrayList<Conjunto>();

    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+s.value +" Linea "+ (s.left+1)+ " Columna "+ (s.right+1));
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }
    public void getConjuntos(){
        for (Conjunto conjunto : CONJUNTOS) {
        System.out.println("Conjunto " + conjunto.Identificador + ": " + conjunto.notacion);
        }
    }

    String concoma;
    

:}

//terminales
terminal String GUION,DOS_PUNTOS, PORC, COR_IZQ, COR_DER, PUNTOCOMA, EQUI, DIS, MAS, INTERROGACION, COM_SIMPLE, COM_DOBLE, MAYOR, CONC, ASTERISCO, COMA;
terminal String NUM;
terminal String DECIMAL;
terminal String ASCII;
terminal String CHAR_MAY;
terminal String CHAR_MIN;
terminal String IDENTIFICADOR;
terminal String CARACTER;
terminal String CADENA;
terminal String CONJUNTO;
//terminal String ASCII;

//no terminales
non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal expresion;
non terminal first;
non terminal last;
non terminal notation;
non terminal con_coma;
non terminal normal;
non terminal comprobacion;
//precedence






//Conjunto con = new Conjunto(a,b); CONJUNTOS.add(con);

// 
start with ini; 

ini::= COR_IZQ first PORC PORC PORC PORC last COR_DER;

first ::= first:a instruccion
            {:
            System.out.println("la primera parte es "+a);
            :}|
          instruccion;

instruccion::= CONJUNTO DOS_PUNTOS IDENTIFICADOR:a GUION MAYOR notation:b PUNTOCOMA {:System.out.println("El identificador es: "+a+" Con la notacion: "+b);
                //Conjunto conjunto = new Conjunto(a, b);
                //CONJUNTOS.add(conjunto)
                ;:}|   
               IDENTIFICADOR GUION MAYOR expresion PUNTOCOMA;

notation::= CHAR_MAY:a EQUI CHAR_MAY:b {:System.out.println("El conjunto "+a+"-"+b);:}|
            CHAR_MIN:a EQUI CHAR_MIN:b {:System.out.println("El conjunto "+a+"-"+b);:}|
            NUM:a EQUI NUM:b {:System.out.println("El conjunto "+a+"-"+b);:}|
            ASCII:a EQUI ASCII:b {:System.out.println("El conjunto "+a+"-"+b);:}|
            con_coma:a {:System.out.println("El concoma es :"+concoma);:};

con_coma::= con_coma:a COMA normal:b {:concoma += b;:}|
            normal;


normal::= CHAR_MAY:a {:System.out.println("ahora es: "+concoma); concoma = a;:}|
          CHAR_MIN:a {:System.out.println("ahora es: "+concoma); concoma = a;:}|
          GUION:a {:System.out.println("ahora es: "+concoma); concoma = a;:}|
          ASCII:a {:System.out.println("ahora es: "+concoma); concoma = a;:}|
          NUM:a {:System.out.println("ahora es: "+concoma); concoma = a;:};


expresion::= CONC expresion expresion|
             DIS expresion expresion|
             ASTERISCO expresion|
             MAS expresion|
             INTERROGACION expresion|
             COR_IZQ IDENTIFICADOR COR_DER|
             CARACTER;



last::= last comprobacion|
        comprobacion;


comprobacion::= IDENTIFICADOR DOS_PUNTOS CADENA PUNTOCOMA;


